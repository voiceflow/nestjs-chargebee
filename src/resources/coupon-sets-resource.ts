/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * Chargebee API
 * OpenAPI spec version: v2 (PC 2.0)
 */
import type { AxiosInstance, AxiosResponse } from "axios";
import type {
  ListCouponSetsParams,
  ListCouponSetsHeaders,
  ListCouponSets200,
  CreateACouponSetHeaders,
  CreateACouponSetBody,
  CreateACouponSet200,
  UpdateACouponSetHeaders,
  UpdateACouponSetBody,
  UpdateACouponSet200,
  RetrieveACouponSetHeaders,
  RetrieveACouponSet200,
  AddCouponCodesToCouponSetHeaders,
  AddCouponCodesToCouponSetBody,
  AddCouponCodesToCouponSet200,
  DeleteUnusedCouponCodesHeaders,
  DeleteUnusedCouponCodes200,
  DeleteACouponSetHeaders,
  DeleteACouponSet200,
} from "./chargebeeAPI.schemas";

export class ChargebeeCouponSetsResource {
  constructor(private readonly axios: AxiosInstance) {}

  /**
 * Use this API to get the list of all the coupon sets.

 * @summary List coupon sets
 */
  public async listCouponSets(
    params?: ListCouponSetsParams,
    headers?: ListCouponSetsHeaders,
  ): Promise<AxiosResponse<ListCouponSets200>> {
    return this.axios.get(`/coupon_sets`, {
      params,
      headers,
    });
  }

  /**
 * Create a coupon set with a coupon code compatible to your product offers and promotional discounts

 * @summary Create a coupon set
 */
  public async createACouponSet(
    createACouponSetBody: CreateACouponSetBody,
    headers?: CreateACouponSetHeaders,
  ): Promise<AxiosResponse<CreateACouponSet200>> {
    return this.axios.post(`/coupon_sets`, {
      headers,
      json: createACouponSetBody,
    });
  }

  /**
 * Use this API to update a specific coupon set by updating its `name` and the `meta_data`.

 * @summary Update a coupon set
 */
  public async updateACouponSet(
    couponSetId: string,
    updateACouponSetBody: UpdateACouponSetBody,
    headers?: UpdateACouponSetHeaders,
  ): Promise<AxiosResponse<UpdateACouponSet200>> {
    return this.axios.post(`/coupon_sets/${couponSetId}/update`, {
      headers,
      json: updateACouponSetBody,
    });
  }

  /**
 * Use this API to retrieve a specific coupon set.

 * @summary Retrieve a coupon set
 */
  public async retrieveACouponSet(
    couponSetId: string,
    headers?: RetrieveACouponSetHeaders,
  ): Promise<AxiosResponse<RetrieveACouponSet200>> {
    return this.axios.get(`/coupon_sets/${couponSetId}`, {
      headers,
    });
  }

  /**
 * This API add coupon codes to an existing coupon set.

 * @summary Add coupon codes to coupon set
 */
  public async addCouponCodesToCouponSet(
    couponSetId: string,
    addCouponCodesToCouponSetBody: AddCouponCodesToCouponSetBody,
    headers?: AddCouponCodesToCouponSetHeaders,
  ): Promise<AxiosResponse<AddCouponCodesToCouponSet200>> {
    return this.axios.post(`/coupon_sets/${couponSetId}/add_coupon_codes`, {
      headers,
      json: addCouponCodesToCouponSetBody,
    });
  }

  /**
 * Use this API to delete all the unutilised coupon codes from a specific coupon set.

 * @summary Delete unused coupon codes
 */
  public async deleteUnusedCouponCodes(
    couponSetId: string,
    headers?: DeleteUnusedCouponCodesHeaders,
  ): Promise<AxiosResponse<DeleteUnusedCouponCodes200>> {
    return this.axios.post(
      `/coupon_sets/${couponSetId}/delete_unused_coupon_codes`,
      {
        headers,
      },
    );
  }

  /**
 * Use this endpoint to delete a specific coupon set

 * @summary Delete a coupon set
 */
  public async deleteACouponSet(
    couponSetId: string,
    headers?: DeleteACouponSetHeaders,
  ): Promise<AxiosResponse<DeleteACouponSet200>> {
    return this.axios.post(`/coupon_sets/${couponSetId}/delete`, {
      headers,
    });
  }
}

/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * Chargebee API
 * OpenAPI spec version: v2 (PC 2.0)
 */
import type { AxiosInstance, AxiosResponse } from "axios";
import type {
  DeleteADifferentialPriceHeaders,
  DeleteADifferentialPriceBody,
  DeleteADifferentialPrice200,
  ListDifferentialPricesParams,
  ListDifferentialPricesHeaders,
  ListDifferentialPrices200,
  RetrieveADifferentialPriceParams,
  RetrieveADifferentialPriceHeaders,
  RetrieveADifferentialPrice200,
  UpdateADifferentialPriceHeaders,
  UpdateADifferentialPriceBody,
  UpdateADifferentialPrice200,
} from "./chargebeeAPI.schemas";

export class ChargebeeDifferentialPricesResource {
  constructor(private readonly axios: AxiosInstance) {}

  /**
 * Delete a differential price using a `differential_price_id` and `item_price_id`.

 * @summary Delete a differential price
 */
  public async deleteADifferentialPrice(
    differentialPriceId: string,
    deleteADifferentialPriceBody: DeleteADifferentialPriceBody,
    headers?: DeleteADifferentialPriceHeaders,
  ): Promise<AxiosResponse<DeleteADifferentialPrice200>> {
    return this.axios.post(
      `/differential_prices/${differentialPriceId}/delete`,
      {
        headers,
        json: deleteADifferentialPriceBody,
      },
    );
  }

  /**
 * Returns a list of differential prices satisfying **all** the conditions specified in the filter parameters below. The list is sorted by the date of creation in descending order (latest first).

 * @summary List differential prices
 */
  public async listDifferentialPrices(
    params?: ListDifferentialPricesParams,
    headers?: ListDifferentialPricesHeaders,
  ): Promise<AxiosResponse<ListDifferentialPrices200>> {
    return this.axios.get(`/differential_prices`, {
      params,
      headers,
    });
  }

  /**
 * Retrieve a differential price using a `differential_price_id` and `item_price_id`.

 * @summary Retrieve a differential price
 */
  public async retrieveADifferentialPrice(
    differentialPriceId: string,
    params: RetrieveADifferentialPriceParams,
    headers?: RetrieveADifferentialPriceHeaders,
  ): Promise<AxiosResponse<RetrieveADifferentialPrice200>> {
    return this.axios.get(`/differential_prices/${differentialPriceId}`, {
      params,
      headers,
    });
  }

  /**
 * Update a differential price using a `differential_price_id` and `item_price_id`.

 * @summary Update a differential price
 */
  public async updateADifferentialPrice(
    differentialPriceId: string,
    updateADifferentialPriceBody: UpdateADifferentialPriceBody,
    headers?: UpdateADifferentialPriceHeaders,
  ): Promise<AxiosResponse<UpdateADifferentialPrice200>> {
    return this.axios.post(`/differential_prices/${differentialPriceId}`, {
      headers,
      json: updateADifferentialPriceBody,
    });
  }
}

/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * Chargebee API
 * OpenAPI spec version: v2 (PC 2.0)
 */
import type { AxiosInstance, AxiosResponse } from "axios";
import type {
  RetrieveAProductHeaders,
  RetrieveAProduct200,
  UpdateAProductHeaders,
  UpdateAProductBody,
  UpdateAProduct200,
  DeleteAProductHeaders,
  DeleteAProduct200,
  AddRemoveOrUpdateOptionsForTheProductHeaders,
  AddRemoveOrUpdateOptionsForTheProductBody,
  AddRemoveOrUpdateOptionsForTheProduct200,
  ListProductsParams,
  ListProductsHeaders,
  ListProducts200,
  CreateAProductHeaders,
  CreateAProductBody,
  CreateAProduct200,
  ListProductVariantsParams,
  ListProductVariantsHeaders,
  ListProductVariants200,
  CreateAProductVariantHeaders,
  CreateAProductVariantBody,
  CreateAProductVariant200,
} from "./chargebeeAPI.schemas";

export class ChargebeeProductsResource {
  constructor(private readonly axios: AxiosInstance) {}

  /**
 * Retrieve a product using `product_id`.

 * @summary Retrieve a product
 */
  public async retrieveAProduct(
    productId: string,
    headers?: RetrieveAProductHeaders,
  ): Promise<AxiosResponse<RetrieveAProduct200>> {
    return this.axios.get(`/products/${productId}`, {
      headers,
    });
  }

  /**
 * This API allows you to update specific product details.   

The following table will help you to understand the status of the mapped [item](https://apidocs.chargebee.com/docs/api/items?prod_cat_ver=2#item_status) and [item_price](https://apidocs.chargebee.com/docs/api/item_prices?prod_cat_ver=2#item_price_status) after passing product [status](https://apidocs.chargebee.com/docs/api/products?prod_cat_ver=2#update_a_product_status) value during product updation.

|-------------------------------------|--------------------------------|
| **Product Status**(Input parameter) | **Item and Item Price Status** |
| **active**                          | **active**                     |
| **inactive**                        | **archived**                   |


 * @summary Update a product
 */
  public async updateAProduct(
    productId: string,
    updateAProductBody: UpdateAProductBody,
    headers?: UpdateAProductHeaders,
  ): Promise<AxiosResponse<UpdateAProduct200>> {
    return this.axios.post(`/products/${productId}`, {
      headers,
      json: updateAProductBody,
    });
  }

  /**
 * This API deletes a product and changes the delete attribute value to `true`. Deletion of a product is not allowed if there are `active` or `archived` variants under the product or if there are items mapped to the product. Once deleted, the `name` of the product can be reused.

 * @summary Delete a product
 */
  public async deleteAProduct(
    productId: string,
    headers?: DeleteAProductHeaders,
  ): Promise<AxiosResponse<DeleteAProduct200>> {
    return this.axios.post(`/products/${productId}/delete`, {
      headers,
    });
  }

  /**
 * This API allows you to add, remove, or update product options.

 * @summary Add remove or update options for the product
 */
  public async addRemoveOrUpdateOptionsForTheProduct(
    productId: string,
    addRemoveOrUpdateOptionsForTheProductBody: AddRemoveOrUpdateOptionsForTheProductBody,
    headers?: AddRemoveOrUpdateOptionsForTheProductHeaders,
  ): Promise<AxiosResponse<AddRemoveOrUpdateOptionsForTheProduct200>> {
    return this.axios.post(`/products/${productId}/update_options`, {
      headers,
      json: addRemoveOrUpdateOptionsForTheProductBody,
    });
  }

  /**
 * This API retrieves the list of products that are `active` or `inactive`. Use `include_deleted` parameter to include deleted products with `active` and `inactive` products.

 * @summary List products
 */
  public async listProducts(
    params?: ListProductsParams,
    headers?: ListProductsHeaders,
  ): Promise<AxiosResponse<ListProducts200>> {
    return this.axios.get(`/products`, {
      params,
      headers,
    });
  }

  /**
 * This API creates a new product.

 * @summary Create a product
 */
  public async createAProduct(
    createAProductBody: CreateAProductBody,
    headers?: CreateAProductHeaders,
  ): Promise<AxiosResponse<CreateAProduct200>> {
    return this.axios.post(`/products`, {
      headers,
      json: createAProductBody,
    });
  }

  /**
 * This API retrieves the list of product variants.

 * @summary List product variants
 */
  public async listProductVariants(
    productId: string,
    params?: ListProductVariantsParams,
    headers?: ListProductVariantsHeaders,
  ): Promise<AxiosResponse<ListProductVariants200>> {
    return this.axios.get(`/products/${productId}/variants`, {
      params,
      headers,
    });
  }

  /**
 * This API is used for creating a new product variant.

The following table will help you to understand the state of the variant `status` after passing [status](https://apidocs.chargebee.com/docs/api/variants?prod_cat_ver=2#create_a_product_variant_status) value during variant creation.

* **Parameter Value** column holds possible inputs to the `variant.status`.

* **Product Status** column states the status of the associated product.

* **Variant Status** column states the value of the variant status once the variant is created.



|------------------------------|--------------------|--------------------|
| **Parameter Value**          | **Product Status** | **Variant Status** |
| No value passed              | **active**         | **active**         |
| No value passed              | **inactive**       | **inactive**       |
| Value passed as **active**   | **active**         | **active**         |
| Value passed as **inactive** | **active**         | **inactive**       |
| Value passed as **active**   | **inactive**       | **not allowed**    |
| Value passed as **inactive** | **inactive**       | **inactive**       |


 * @summary Create a product variant
 */
  public async createAProductVariant(
    productId: string,
    createAProductVariantBody: CreateAProductVariantBody,
    headers?: CreateAProductVariantHeaders,
  ): Promise<AxiosResponse<CreateAProductVariant200>> {
    return this.axios.post(`/products/${productId}/variants`, {
      headers,
      json: createAProductVariantBody,
    });
  }
}
